/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.46
 * Generated at: 2019-09-28 15:54:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
String contextPath = request.getContextPath(); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.js\"></script>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>WEworks</title>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("\tbackground-image: url('");
      out.print( contextPath );
      out.write("/resources/login.jpg');\r\n");
      out.write("\t/* background-repeat:no-repeat; */\r\n");
      out.write("\tbackground-position: center;\r\n");
      out.write("\t/* background-size:50% 50%; */\r\n");
      out.write("\t/* background-size:cover; */\r\n");
      out.write("\t/* background-size:contain;  */\r\n");
      out.write("\t/* background-size:1920px 1080px;  */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main {\r\n");
      out.write("\tbackground-color: rgba(255, 255, 255, 0.8);\r\n");
      out.write("\topacity: 1;\r\n");
      out.write("\tborder: 1px solid balck;\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\theight:400px;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 50%;\r\n");
      out.write("\tleft: 50%;\r\n");
      out.write("\ttransform: translate(-50%, -80%);\r\n");
      out.write("\ttext-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".main th {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write(".main table {\r\n");
      out.write("position: absolute;\r\n");
      out.write("\ttop: 50%;\r\n");
      out.write("\tleft: 50%;\r\n");
      out.write("\ttransform: translate(-50%, -50%);\r\n");
      out.write("}\r\n");
      out.write(".main button{\r\n");
      out.write("\twidth:250px;\r\n");
      out.write("\theight:50px;\r\n");
      out.write("\talign: right;\r\n");
      out.write("}\r\n");
      out.write(".main small{\r\n");
      out.write("font-size:10px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"main\">\r\n");
      out.write("\t\t<form id=\"form1\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th colspan=\"2\"><img src=\"");
      out.print( contextPath );
      out.write("/resources/logo2.png\" alt=\"no\"></th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"id\">ID</label> \r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"id\" name=\"loginId\" onkeyup=\"test1();\" placeholder=\"사원번호\"> \r\n");
      out.write("\t\t\t\t\t\t<small id=\"idLost\" class=\"form-text text-muted\">\r\n");
      out.write("\t\t\t\t\t\t아이디 분실시 너는 멍청이. 사원번호인데.\r\n");
      out.write("\t\t\t\t\t\t</small>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t  <div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t    <label for=\"pwd\">PW</label>\r\n");
      out.write("\t\t\t\t\t    <input type=\"password\" class=\"form-control\" id=\"pw\" name=\"loginPw\" placeholder=\"Password\">\r\n");
      out.write("\t\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"checkbox\" id=\"remember\" name=\"rememberMe\" value=\"true\"/>아이디저장 </td>\r\n");
      out.write("\t\t\t\t<td align=\"right\"><a style=\"color:blue;\" onclick=\"alert('연락하세요');\">까먹음?또요?</a></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" onclick=\"login();\">\r\n");
      out.write("\t\t\t\t로그인\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("<script>\r\n");
      out.write("//아이디저장. 테스트 해봄.\r\n");
      out.write("\t$(function(){\r\n");
      out.write("// \t\t$.cookie('key',$('#id').val(),{expires:7});\r\n");
      out.write("// \t\t$.removeCookie('key');\r\n");
      out.write("\t\tvar key =$.cookie(\"key\");\r\n");
      out.write("// \t\tkey = 'test';\r\n");
      out.write("\t\tif(key==null){\r\n");
      out.write("\t\t\tconsole.log('널값!');\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('#id').val(key);\r\n");
      out.write("\t\t\t$('#remember').attr(\"checked\",true);\r\n");
      out.write("\t\t};\r\n");
      out.write("\t});\r\n");
      out.write("\tfunction login(){\r\n");
      out.write("\t\tif($('#remember').prop(\"checked\")){\r\n");
      out.write("\t\t\t$.cookie('key',$('#id').val(),{expires:7});\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$.removeCookie(\"key\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$('#form1').attr('method','post');\r\n");
      out.write("\t\t$('#form1').attr('action','");
      out.print( contextPath);
      out.write("/login.me');\r\n");
      out.write("\t\t$('#form1').submit();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
